"""Initial migration

Revision ID: 229203e6c7a6
Revises: 
Create Date: 2025-01-11 17:28:24.953518

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers used by Alembic.
revision = "229203e6c7a6"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "campaigns",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("experiment_type", sa.String(), nullable=False),
        sa.Column("owner", sa.String(), nullable=False),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("max_experiments", sa.Integer(), nullable=False),
        sa.Column("max_concurrent_experiments", sa.Integer(), nullable=False),
        sa.Column("optimize", sa.Boolean(), nullable=False),
        sa.Column("optimizer_computer_ip", sa.String(), nullable=False),
        sa.Column("dynamic_parameters", sa.JSON(), nullable=True),
        sa.Column("meta", sa.JSON(), nullable=False),
        sa.Column("resume", sa.Boolean(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("CREATED", "RUNNING", "COMPLETED", "SUSPENDED", "CANCELLED", "FAILED", name="campaignstatus"),
            nullable=False,
        ),
        sa.Column("experiments_completed", sa.Integer(), nullable=False),
        sa.Column("current_experiment_ids", sa.JSON(), nullable=False),
        sa.Column("pareto_solutions", sa.JSON(), nullable=True),
        sa.Column("start_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "containers",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("lab", sa.String(), nullable=True),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("meta", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "devices",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("lab_id", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("computer", sa.String(), nullable=False),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("status", sa.Enum("ACTIVE", "INACTIVE", name="devicestatus"), nullable=False),
        sa.Column("meta", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "experiments",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("owner", sa.String(), nullable=False),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("dynamic_parameters", sa.JSON(), nullable=False),
        sa.Column("meta", sa.JSON(), nullable=True),
        sa.Column("resume", sa.Boolean(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("CREATED", "RUNNING", "COMPLETED", "SUSPENDED", "CANCELLED", "FAILED", name="experimentstatus"),
            nullable=False,
        ),
        sa.Column("running_tasks", sa.JSON(), nullable=False),
        sa.Column("completed_tasks", sa.JSON(), nullable=False),
        sa.Column("start_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "campaign_samples",
        sa.Column("campaign_id", sa.String(), nullable=False),
        sa.Column("experiment_id", sa.String(), nullable=False),
        sa.Column("inputs", sa.JSON(), nullable=False),
        sa.Column("outputs", sa.JSON(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["campaign_id"],
            ["campaigns.id"],
        ),
        sa.ForeignKeyConstraint(
            ["experiment_id"],
            ["experiments.id"],
        ),
        sa.PrimaryKeyConstraint("campaign_id", "experiment_id"),
    )
    op.create_table(
        "container_allocations",
        sa.Column("container_type", sa.String(), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("owner", sa.String(), nullable=False),
        sa.Column("experiment_id", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["experiment_id"],
            ["experiments.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "device_allocations",
        sa.Column("lab_id", sa.String(), nullable=False),
        sa.Column("device_type", sa.String(), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("owner", sa.String(), nullable=False),
        sa.Column("experiment_id", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["experiment_id"],
            ["experiments.id"],
        ),
        sa.PrimaryKeyConstraint("lab_id", "id"),
    )
    op.create_table(
        "resource_requests",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("requester", sa.String(), nullable=False),
        sa.Column("experiment_id", sa.String(), nullable=True),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("timeout", sa.Integer(), nullable=False),
        sa.Column("reason", sa.String(), nullable=True),
        sa.Column("resources", sa.JSON(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "ALLOCATED", "COMPLETED", "ABORTED", name="resourcerequestallocationstatus"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("allocated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["experiment_id"],
            ["experiments.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "tasks",
        sa.Column("uid", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("experiment_id", sa.String(), nullable=True),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("devices", sa.JSON(), nullable=False),
        sa.Column("input_parameters", sa.JSON(), nullable=True),
        sa.Column("input_containers", sa.JSON(), nullable=True),
        sa.Column("output_parameters", sa.JSON(), nullable=True),
        sa.Column("output_containers", sa.JSON(), nullable=True),
        sa.Column("output_file_names", sa.JSON(), nullable=True),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("resource_allocation_timeout", sa.Integer(), nullable=False),
        sa.Column("meta", sa.JSON(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("CREATED", "RUNNING", "COMPLETED", "FAILED", "CANCELLED", name="taskstatus"),
            nullable=False,
        ),
        sa.Column("start_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["experiment_id"], ["experiments.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("uid"),
    )
    op.create_index("idx_experiment_id_task_id", "tasks", ["experiment_id", "id"], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_experiment_id_task_id", table_name="tasks")
    op.drop_table("tasks")
    op.drop_table("resource_requests")
    op.drop_table("device_allocations")
    op.drop_table("container_allocations")
    op.drop_table("campaign_samples")
    op.drop_table("experiments")
    op.drop_table("devices")
    op.drop_table("containers")
    op.drop_table("campaigns")
    # ### end Alembic commands ###
